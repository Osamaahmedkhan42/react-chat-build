{"version":3,"sources":["config/firebase.js","containers/Home.js","store/action/index.js","containers/Chat.js","config/router.js","App.js","reportWebVitals.js","store/reducer/index.js","store/index.js","index.js"],"names":["Firebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Home","console","log","this","props","user","name","ph","onClick","set_data","fb_login","history","hd_login","react","Component","connect","state","dispatch","data","type","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","credential","create_user","accessToken","displayName","email","profile","photoURL","uid","database","ref","child","set","payload","alert","push","catch","error","code","message","hardCode","Chat","chat","setState","chat_user","cu_user","current_user","merged_uid","uid_merge","get_messages","id1","id2","send_message","on","val","get_user","users","src","alt","dum_data","style","display","backgroundColor","map","v","i","width","Object","keys","length","color","value","onChange","e","target","placeholder","React","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a259a856.chunk.js","sourcesContent":["import firebase from 'firebase/app'\n\nimport 'firebase/auth'\nimport 'firebase/database'\n\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAcK7D9ku25asLrN-ufsV2hWc8BsAptk8w\",\n    authDomain: \"basic-chat-42.firebaseapp.com\",\n    projectId: \"basic-chat-42\",\n    storageBucket: \"basic-chat-42.appspot.com\",\n    messagingSenderId: \"525598547929\",\n    appId: \"1:525598547929:web:b37dab88afae01253f03c8\"\n  };\n  // Initialize Firebase\n  var Firebase = firebase.initializeApp(firebaseConfig);\n export default Firebase;\n","import react from 'react'\nimport { connect } from 'react-redux';\nimport {set_data,fb_login,hardCode} from '../store/action'\n\n\nclass Home extends react.Component{\n    render(){\n        console.log('propsHome=>>',this.props)\n       let user = {name:'hamza',ph:'786'}\n        \n        return(\n            <div>\n                <h1>HOME123</h1>\n                <button onClick={()=>this.props.set_data(user)}>check Function</button>\n                <button onClick={()=>this.props.fb_login(this.props.history)}>FB login</button>\n                <button onClick={()=>console.log(this.props)}>check props home c</button>\n                <button onClick={()=>this.props.hd_login(this.props.history)}>Hardcoded login</button>\n\n            </div>\n        )\n    }\n    \n\n}\nconst mapStateToProps = (state) => ({ \n  \n   \n  \n})\nconst mapDispatchToProps = (dispatch) => ({\n    set_data : (data) =>  dispatch(set_data(data)),\n    fb_login : (history)=> dispatch(fb_login(history)),\n    hd_login : (history)=> dispatch(hardCode(history)),\n})\nexport default connect(mapStateToProps,mapDispatchToProps) (Home);","import Firebase from '../../config/firebase'\nimport firebase from 'firebase'\n\n\n\n\nconst set_data = (data) => {\n\n\n  return (dispatch) => {\n    dispatch({ type: \"SETDATA\", data: data })\n    //console.log('chal raha hy')\n\n  }\n\n\n}\n\nconst fb_login = (history) => {\n  console.log('face auth')\n  return (dispatch) => {\n\n    var provider = new firebase.auth.FacebookAuthProvider();\n    firebase.auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // The signed-in user info.\n        var user = result.user;\n\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var accessToken = credential.accessToken;\n\n        let create_user = {\n\n          name: user.displayName,\n          email: user.email,\n          profile: user.photoURL,\n          uid: user.uid\n\n        }\n\n\n        firebase.database().ref('/').child(`users/${user.uid}`).set(create_user)\n          .then(() => {\n            dispatch({ type: \"SETUSER\", payload: create_user })\n            alert('login sucessful');\n            history.push(\"/chat\");\n            //console.log(history)\n          })\n\n        // ...\n        console.log('user=>>', create_user)\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n\n        // ...\n        console.log('error=>', error)\n      });\n\n\n    // //dispatch({type:\"SETDATA\" })\n  }\n\n\n\n\n\n}\n    \n   \n//\nconst adding_Dummy =()=>{\n\n  return(dispatch)=>{\n\n    let create_user={\n\n      name :'hammad',\n      email : 'hammad.email',\n      profile: \"https://www.google.com/search?q=panda+images+png&client=ubuntu&hs=1xK&channel=fs&sxsrf=ALeKk03sNhgVwGYbKukeGR2hAlhZxSiLqw:1612673530976&tbm=isch&source=iu&ictx=1&fir=EHcGEokSNqeo0M%252CEkJ4xS4VaN4tTM%252C_&vet=1&usg=AI4_-kQn4D71wEu1Oij4buepoZ6xKZXmtg&sa=X&ved=2ahUKEwi78s6H_dbuAhXGasAKHbAJC_IQ9QF6BAgNEAE#imgrc=EHcGEokSNqeo0M\",\n      uid : '234582347532452353450042'\n\n    }\n\n    firebase.database().ref('/').child('users/23458234753245235345').set(create_user)\n          .then(() => {\n            \n            alert('dummy sucessful');\n           \n          })\n\n       \n       \n\n\n  }\n}\n//\n// A hard coded user for sending to database and testing chat functionality\nconst hardCode =(history)=>{\n\n  return(dispatch)=>{\n\n    let create_user={\n\n      name :'hammad',\n      email : 'hammad@abc.com',\n      profile: '',\n       uid : '234582347532452353450042'\n\n    }\n\n    firebase.database().ref('/').child('users/234582347532452353450042').set(create_user)\n          .then(() => {\n            dispatch({ type: \"SETUSER\", payload: create_user })\n            alert('login sucessful');\n            history.push(\"/chat\");\n            \n            \n           \n          })\n\n       \n       \n\n\n  }\n}\n//\nconst get_user=()=>{\n  return (dispatch)=>{\n    let users = [];\n\n    firebase.database().ref('/').child('users').on('child_added',(data)=>{\n      \n      users.push(data.val())\n          console.log('firebasae_added=>',users)\n          dispatch({type: \"SETFIREBASEUSER\", payload: users})\n    })\n\n    \n          \n  }\n\n}\n//\n\n\n\nexport {\n  set_data,\n  fb_login,\n  adding_Dummy ,\n  hardCode,\n  get_user\n}\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { adding_Dummy, get_user } from '../store/action'\nimport firebase from '../config/firebase'\n\nclass Chat extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            chat_user: {},\n            chat: [],\n            message: []\n        }\n    }\n\n    chat = (user) => {\n        this.setState({\n            chat_user: user\n        })\n\n        let cu_user= this.props.current_user\n        let chat_user = this.state.chat_user\n\n        let merged_uid = this.uid_merge(cu_user.uid,user.uid);\n        console.log('hammad',user.uid)\n        console.log('osama',cu_user.uid)\n        console.log('uid___WARS',cu_user.uid)\n        console.log('merged_uid>>>',merged_uid)\n\n        this.get_messages(merged_uid)\n\n    }\n\n    uid_merge =(id1,id2)=>{\n        if (id1<id2) {\n            return id1+id2\n        }\n        else \n         return id2+id1\n    }\n\n    send_message=()=>{\n       \n\n        let user= this.props.current_user\n        let chat_user = this.state.chat_user\n\n        let merged_uid = this.uid_merge(user.uid,chat_user.uid);\n        \n        firebase.database().ref('/').child(`chat/${merged_uid}`).push({\n            message :this.state.message,\n            name :user.name,\n            uid:user.uid\n        })\n\n\n\n        // this.state.chat.push({\n        //     message : this.state.message\n        // })\n\n        // this.setState({\n        //     chats: this.state.chats,\n        //     message : ''\n        // })\n\n    }\n\n    get_messages=(uid)=>{\n        firebase.database().ref('/').child(`chat/${uid}`).on('child_added',(message)=>{\n            this.state.chat.push(message.val())\n            this.setState({\n                chat:this.state.chat,\n                message : ''\n            })\n        })\n    }\n\n    componentDidMount() {\n\n        this.props.get_user()\n        this.props.get_user()\n\n    }\n\n    render() {\n\n\n        console.log('propsChat=>', this.props.users)\n        let user = this.props.current_user\n\n        console.log('thistaet==>s', this.state)\n        console.log('asdCU',this.props.current_user)\n\n        return (\n            <div>\n               \n\n                <h1>WELCOME ! {user.name}</h1>\n                <img src={user.profile} alt='img' />\n                <h2>Email: {user.email}</h2>\n                <button onClick={() => this.props.dum_data()}>adding dummy</button>\n                <button onClick={() => console.log(this.props)}>PRops</button>\n                <button onClick={() => this.props.get_user()}>get user</button>\n                {/* <button onClick={(e)=>console.log(e.target.value)}>button</button> */}\n\n                <div style={{ display: \"flex\" }}>\n                    <div style={{ backgroundColor: \"red\" }}>\n                        <h4>Chat users</h4>\n                        <ul>\n                            {this.props.users.map((v, i) => {\n                                return v.uid !== user.uid && <li  key={i}>{v.name} <button onClick={() => this.chat(v)} >CHAT</button></li>\n                            })}\n                        </ul>\n                    </div>\n\n                    <div style={{ width: 400, backgroundColor: \"yellow\" }}>\n                        <h4>CHAT</h4>\n                        {Object.keys(this.state.chat_user).length ?\n                            <div>\n\n                                \n                                <h4>{this.state.chat_user.name}</h4>\n                                <ul>\n                                {this.state.chat.map((v,i)=>{\n                                    return <li  style={{color : v.uid === user.uid ? 'red' :'green'}}key={i}>{v.message}</li>\n                                })}\n\n                                <input value={this.state.message} onChange={(e)=>{this.setState({message:e.target.value})}}  type=\"text\" placeholder=\"Enter here\" />\n                                <button onClick={()=>this.send_message()}>Send </button>\n                                </ul>\n                            </div>\n                            :\n                            <div>\n                                NO USER\n                        </div>}\n\n\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = (state) => ({\n\n    current_user: state.current_user,\n    users: state.users\n\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n    dum_data: () => dispatch(adding_Dummy()),\n    get_user: () => dispatch(get_user()),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","import React from 'react';\nimport Home from '../containers/Home'\nimport Chat from '../containers/Chat'\nimport {\n  BrowserRouter as Router,\n  \n  Route,\n  \n} from \"react-router-dom\";\n\nclass AppRouter extends React.Component{\n    render(){\n        return(\n            <Router>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/chat' component={Chat} />\n            </Router>\n        )\n    }\n    \n    \n\n}\nexport default AppRouter;","import react from 'react'\n//import Home from './containers/Home'\nimport AppRouter from './config/router'\nimport { connect } from 'react-redux';\n\n\n\n\nclass App extends react.Component{\n    render(){\n       // console.log('AppProp=>',this.props)\n        return(\n            <div>\n                \n                \n                <AppRouter />\n            </div>\n        )\n    }\n    \n\n}\nconst mapStateToProps = (state) => ({ \n    \n   // f: state.users\n   \n })\nexport default connect(mapStateToProps,null) (App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n\n    users: [],\n    current_user: {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    console.log('action==>', action)\n    switch (action.type) {\n        case \"SETUSER\":\n            return ({\n                ...state,\n                current_user: action.payload\n            })\n            case \"SETFIREBASEUSER\":\n            return ({\n                ...state,\n                users: action.payload,\n            })\n        default:\n            return state;\n\n\n    }\n    return state;\n}","import reducer from './reducer'\nimport {applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore (reducer,applyMiddleware(thunk) )\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}